I need you to start going through combined_typechecker_and_linter_problems.txt (just pick random chunks of {chunk_size} lines at a time from anywhere within the file, starting with a random starting line; since I have multiple agents working on this task, I want each agent to work on different problems!)

As you select your chosen problems, mark them as such by prepending the line with [COMPLETED] so we can keep track of which ones have already been processed-- do this up front so there's no risk of forgetting to do it later and wasting time and compute on errors that are already being worked on or which were previously worked on. (Obviously, when selecting your random lines to work on, you should first filter out any rows that have "[COMPLETED]" in them so you don't accidentally work on already in-progress or completed tasks!)

I want you to be SMART about fixing the problems. For type-related problems identified by mypy, understand the actual types involved and fix them properly - never just add type: ignore or use Any as a band-aid. For linting issues from ruff, don't just disable rules - understand why the rule exists and fix the underlying issue. If there's an unused import or variable, figure out if it should be used somewhere or safely removed.

Make all edits to the existing code files-- don't ever create a duplicative code file with the changes and give it some silly name; for instance, don't correct a problem in module_xyz.py in a newly created file called module_xyz_fixed.py or module_xyz_new.py-- always just revise module_xyz.py in place!

CRITICALLY IMPORTANT: Follow Python best practices and PEP 8 style guidelines. Use type hints properly throughout the codebase. This code is still in development so we don't care about backwards compatibility - fix things the RIGHT WAY. Note that we use uv as our package manager, not pip.

When you're done fixing the entire batch of selected problems, you can commit your progress to git with a detailed commit message (but don't go overboard making the commit message super long). Try to complete as much work as possible before coming back to me for more instructions-- what I've already asked you to do should keep you very busy for a while! 