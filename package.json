{
  "name": "autoclaude",
  "displayName": "AutoClaude",
  "description": "Intelligent AI-powered development assistant with automated workflows, smart task completion, and user-friendly Claude integration",
  "version": "2.4.0",
  "icon": "icon.png",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Machine Learning",
    "Other"
  ],
  "main": "./out/extension.js",
  "activationEvents": [
    "onCommand:autoclaude.start"
  ],
  "contributes": {
    "commands": [
      {
        "command": "autoclaude.start",
        "title": "üöÄ Start AutoClaude Assistant",
        "category": "AutoClaude",
        "icon": "$(play)"
      },
      {
        "command": "autoclaude.stop",
        "title": "‚èπÔ∏è Stop AutoClaude",
        "category": "AutoClaude",
        "icon": "$(stop)"
      },
      {
        "command": "autoclaude.addMessage",
        "title": "üí¨ Ask Claude Something...",
        "category": "AutoClaude",
        "icon": "$(comment-add)"
      },
      {
        "command": "autoclaude.runScriptChecks",
        "title": "üîç Run Quality Checks",
        "category": "AutoClaude",
        "icon": "$(check-all)"
      },
      {
        "command": "autoclaude.runScriptLoop",
        "title": "üîÑ Auto-Fix Issues (Loop Mode)",
        "category": "AutoClaude",
        "icon": "$(sync)"
      },
      {
        "command": "autoclaude.quickStart",
        "title": "‚ö° Quick Start Guide",
        "category": "AutoClaude",
        "icon": "$(getting-started)"
      },
      {
        "command": "autoclaude.runSubAgents",
        "title": "ü§ñ Run AI Analysis Agents",
        "category": "AutoClaude",
        "icon": "$(robot)"
      },
      {
        "command": "autoclaude.autoComplete",
        "title": "‚ú® Auto-Complete Current Task",
        "category": "AutoClaude",
        "icon": "$(wand)"
      },
      {
        "command": "autoclaude.workflowWizard",
        "title": "üßô Workflow Wizard",
        "category": "AutoClaude",
        "icon": "$(list-tree)"
      },
      {
        "command": "autoclaude.updateContext",
        "title": "üîÑ Update Project Context",
        "category": "AutoClaude",
        "icon": "$(sync)"
      },
      {
        "command": "autoclaude.showContext",
        "title": "üìã Show Project Context",
        "category": "AutoClaude",
        "icon": "$(file-text)"
      },
      {
        "command": "autoclaude.showTasks",
        "title": "üìù Show Task History",
        "category": "AutoClaude",
        "icon": "$(checklist)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "autoclaude.start",
          "when": "true"
        },
        {
          "command": "autoclaude.stop",
          "when": "true"
        },
        {
          "command": "autoclaude.addMessage",
          "when": "true"
        },
        {
          "command": "autoclaude.runScriptChecks",
          "when": "true"
        },
        {
          "command": "autoclaude.runScriptLoop",
          "when": "true"
        },
        {
          "command": "autoclaude.quickStart",
          "when": "true"
        },
        {
          "command": "autoclaude.runSubAgents",
          "when": "true"
        },
        {
          "command": "autoclaude.autoComplete",
          "when": "true"
        },
        {
          "command": "autoclaude.workflowWizard",
          "when": "true"
        },
        {
          "command": "autoclaude.updateContext",
          "when": "true"
        },
        {
          "command": "autoclaude.showContext",
          "when": "true"
        },
        {
          "command": "autoclaude.showTasks",
          "when": "true"
        }
      ],
      "explorer/context": [
        {
          "command": "autoclaude.runScriptChecks",
          "when": "explorerResourceIsFolder",
          "group": "autoclaude"
        },
        {
          "command": "autoclaude.autoComplete",
          "when": "explorerResourceIsFolder",
          "group": "autoclaude"
        }
      ],
      "editor/context": [
        {
          "command": "autoclaude.addMessage",
          "when": "editorTextFocus",
          "group": "autoclaude"
        }
      ]
    },
    "configuration": {
      "title": "AutoClaude",
      "properties": {
        "autoclaude.developmentMode": {
          "type": "boolean",
          "default": false,
          "description": "Enable development mode with debug controls and testing features"
        },
        "autoclaude.queue.maxSize": {
          "type": "number",
          "default": 1000,
          "minimum": 10,
          "maximum": 10000,
          "description": "Maximum number of messages in queue before cleanup"
        },
        "autoclaude.queue.maxMessageSize": {
          "type": "number",
          "default": 50000,
          "minimum": 1000,
          "maximum": 1000000,
          "description": "Maximum size of individual message text (bytes)"
        },
        "autoclaude.queue.maxOutputSize": {
          "type": "number",
          "default": 100000,
          "minimum": 1000,
          "maximum": 1000000,
          "description": "Maximum size of message output (bytes)"
        },
        "autoclaude.queue.retentionHours": {
          "type": "number",
          "default": 24,
          "minimum": 1,
          "maximum": 168,
          "description": "Hours to keep completed messages before cleanup"
        },
        "autoclaude.session.autoStart": {
          "type": "boolean",
          "default": false,
          "description": "Automatically start Claude session when extension activates"
        },
        "autoclaude.session.skipPermissions": {
          "type": "boolean",
          "default": true,
          "description": "Skip Claude CLI permission prompts (use --dangerously-skip-permissions)"
        },
        "autoclaude.session.scheduledStartTime": {
          "type": "string",
          "default": "",
          "description": "Schedule session start at specific time (HH:MM format, e.g., '09:30'). Cannot be used with autoStart. Empty string disables scheduling.",
          "pattern": "^(([01]?[0-9]|2[0-3]):[0-5][0-9])?$"
        },
        "autoclaude.session.autoResumeUnfinishedTasks": {
          "type": "boolean",
          "default": true,
          "description": "Automatically detect and continue unfinished tasks when Claude stops working. Analyzes output for TODOs, incomplete steps, and mid-task interruptions."
        },
        "autoclaude.session.aggressiveTaskDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable aggressive task detection mode. This will attempt to resume work even with low confidence indicators like partial TODO mentions or incomplete sentences. May result in more false positives."
        },
        "autoclaude.session.autoResumeDelay": {
          "type": "number",
          "default": 2000,
          "minimum": 0,
          "maximum": 10000,
          "description": "Delay in milliseconds before checking for unfinished tasks after Claude stops. Increase if Claude's output is being cut off during analysis."
        },
        "autoclaude.sleepPrevention.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Prevent computer from sleeping while processing queue"
        },
        "autoclaude.sleepPrevention.method": {
          "type": "string",
          "enum": [
            "auto",
            "caffeinate",
            "powershell",
            "systemd-inhibit"
          ],
          "default": "auto",
          "description": "Method to use for sleep prevention"
        },
        "autoclaude.history.maxRuns": {
          "type": "number",
          "default": 20,
          "minimum": 1,
          "maximum": 100,
          "description": "Maximum number of history runs to keep"
        },
        "autoclaude.history.autoSave": {
          "type": "boolean",
          "default": true,
          "description": "Automatically save workspace history"
        },
        "autoclaude.history.persistPendingQueue": {
          "type": "boolean",
          "default": true,
          "description": "Save pending messages to survive VS Code restart"
        },
        "autoclaude.history.showInUI": {
          "type": "boolean",
          "default": false,
          "description": "Show history section in the AutoClaude interface"
        },
        "autoclaude.security.allowDangerousXssbypass": {
          "type": "boolean",
          "default": false,
          "description": "‚ö†Ô∏è DANGER: Allow bypassing XSS protection in webview content. Only enable if you trust all message content and understand the security risks."
        },
        "autoclaude.scriptRunner.maxIterations": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "description": "Maximum number of iterations for script check loop"
        },
        "autoclaude.scriptRunner.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable script runner functionality"
        },
        "autoclaude.scriptRunner.autoCreateFolder": {
          "type": "boolean",
          "default": true,
          "description": "Automatically create .autopilot folder when starting"
        },
        "autoclaude.subAgents.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable the intelligent sub-agent system for script checks. When enabled, scripts become Claude-powered sub-agents that can analyze, fix, and improve code intelligently."
        },
        "autoclaude.subAgents.showCapabilities": {
          "type": "boolean",
          "default": true,
          "description": "Show sub-agent capabilities in the UI when hovering over scripts"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./ && cp src/claude_pty_wrapper.py out/claude/session/ && cp -r src/webview out/",
    "watch": "tsc -watch -p ./",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest --testPathPattern=integration",
    "test:unit": "jest --testPathPattern=unit",
    "package": "vsce package --no-dependencies",
    "package:pre-release": "vsce package --no-dependencies --pre-release",
    "publish": "vsce publish",
    "prepackage": "npm run compile",
    "release": "npm run compile && npm run package"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/jest": "^29.5.5",
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "typescript": "^4.9.4",
    "vsce": "^2.15.0"
  },
  "keywords": [
    "claude",
    "claude-code",
    "ai",
    "automation",
    "queue",
    "task-management",
    "productivity",
    "development",
    "anthropic",
    "machine-learning",
    "batch-processing",
    "workflow",
    "user-friendly",
    "intelligent-assistant",
    "code-quality",
    "error-recovery",
    "workflow-automation",
    "smart-completion",
    "guided-setup",
    "interactive-help"
  ],
  "author": "Jimmy <jimmy@r3e.network> (based on original work by Ben Basha)",
  "contributors": [
    {
      "name": "Ben Basha",
      "url": "https://github.com/benbasha"
    },
    {
      "name": "Jimmy",
      "email": "jimmy@r3e.network",
      "url": "https://github.com/r3e-network"
    }
  ],
  "license": "MIT",
  "publisher": "r3e",
  "repository": {
    "type": "git",
    "url": "https://github.com/r3e-network/Claude-Autopilot"
  },
  "homepage": "https://github.com/r3e-network/Claude-Autopilot#readme",
  "bugs": {
    "url": "https://github.com/r3e-network/Claude-Autopilot/discussions"
  },
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  }
}
